   openapi: 3.0.0
   info:
     title: Your API Title
     version: 1.0.0
     description: Your API Description
   paths:
     /api/users/login:
       post:
         summary: User login
         description: Authenticate a user with email and password.
         tags:
           - User
         requestBody:
           required: true
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/LoginRequest'
         responses:
           200:
             description: Successful login
             content:
               application/json:
                 schema:
                   $ref: '#/components/schemas/LoginResponse'
           400:
             description: Invalid email or password
             content:
               application/json:
                 schema:
                   $ref: '#/components/schemas/CommonError'
           500:
             description: Internal server error
             content:
               application/json:
                 schema:
                   $ref: '#/components/schemas/CommonError'

     /api/users/register:
       post:
         summary: User registration
         description: Register a new user with email, username, and password.
         tags:
           - User
         requestBody:
           required: true
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/RegisterRequest'
         responses:
           200:
             description: Successful registration
             content:
               application/json:
                 schema:
                   $ref: '#/components/schemas/RegisterResponse'
           400:
             description: Bad request
             content:
               application/json:
                 schema:
                   $ref: '#/components/schemas/CommonError'
           500:
             description: Internal server error
             content:
               application/json:
                 schema:
                   $ref: '#/components/schemas/CommonError'

     /api/users/logout:
       post:
         summary: User logout
         description: Log out the user and clear the refresh token.
         tags:
           - User
         responses:
           200:
             description: Successful logout
             content:
               application/json:
                 schema:
                   $ref: '#/components/schemas/LogoutResponse'
           500:
             description: Internal server error
             content:
               application/json:
                 schema:
                   $ref: '#/components/schemas/CommonError'

     /api/users/{id}:
       get:
         summary: Get user by ID
         description: Retrieve a user by their ID.
         tags:
           - User
         parameters:
           - name: id
             in: path
             required: true
             schema:
               type: string
         responses:
           200:
             description: User found
             content:
               application/json:
                 schema:
                   $ref: '#/components/schemas/GetUserResponse'
           400:
             description: No user data provided
             content:
               application/json:
                 schema:
                   $ref: '#/components/schemas/CommonError'
           500:
             description: Internal server error
             content:
               application/json:
                 schema:
                   $ref: '#/components/schemas/CommonError'

     /api/users:
       get:
         summary: Get all users
         description: Retrieve a list of all users.
         tags:
           - User
         responses:
           200:
             description: List of users
             content:
               application/json:
                 schema:
                   $ref: '#/components/schemas/GetAllUsersResponse'
           500:
             description: Internal server error
             content:
               application/json:
                 schema:
                   $ref: '#/components/schemas/CommonError'
   components:
     schemas:
       User:
         type: object
         properties:
           id:
             type: string
             format: uuid
             example: "123e4567-e89b-12d3-a456-426614174000"
           email:
             type: string
             example: "user@example.com"
           firstName:
             type: string
             example: "John"
           lastName:
             type: string
             example: "Doe"
           userName:
             type: string
             example: "johndoe"
           receivePromo:
             type: boolean
             example: false
           passwordHash:
             type: string
             example: "hashedpassword"
           tokenVersion:
             type: integer
             example: 0
           birthday:
             type: string
             example: "1990-01-01"
           phoneNumber:
             type: string
             example: "+1234567890"
           address:
             type: string
             example: "123 Main St"
           nationality:
             type: string
             example: "American"
           membershipExpiration:
             type: string
             example: "2024-01-01"
           membershipType:
             type: string
             enum: [MEMBER, PREMIUM, ADMIN]
             example: "MEMBER"
           avatar:
             type: string
             example: "avatar.png"
       CommonError:
         type: object
         properties:
           error:
             type: object
             properties:
               message:
                 type: string
                 example: "Invalid email or password"
       LoginRequest:
         type: object
         properties:
           email:
             type: string
             example: user@example.com
           password:
             type: string
             example: password123
       LoginResponse:
         type: object
         properties:
           user:
             $ref: '#/components/schemas/User'
           accessToken:
             type: string
       RegisterRequest:
         type: object
         properties:
           email:
             type: string
             example: user@example.com
           userName:
             type: string
             example: johndoe
           password:
             type: string
             example: password123
           repeatPassword:
             type: string
             example: password123
       RegisterResponse:
         type: object
         properties:
           user:
             $ref: '#/components/schemas/User'
           accessToken:
             type: string
       LogoutResponse:
         type: boolean
         example: true
       GetUserResponse:
         $ref: '#/components/schemas/User'
       GetAllUsersResponse:
         type: array
         items:
           $ref: '#/components/schemas/User'